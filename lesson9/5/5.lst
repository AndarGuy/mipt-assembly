     1                                  ; T время в секундах от начала суток, переменной k присвоить значение: T+1. 
     2                                  ; (часы всегда <24)  и выдать на печать в виде чч:мм:сек.
     3                                  
     4                                  global _main
     5                                  
     6                                  extern _printf
     7                                  extern _scanf
     8                                  
     9                                  default rel
    10                                  
    11                                  section .data
    12 00000000 256400                  input_format    db      "%d", 0x0
    13 00000003 253032643A25303264-     output_format   db      "%02d:%02d:%02d"
    13 0000000C 3A25303264         
    14                                  
    15                                  section .bss
    16 00000000 ????                    t               resw    1
    17                                  
    18 00000002 ??                      h               resb    1   ; hours
    19 00000003 ??                      m               resb    1   ; minutes
    20 00000004 ??                      s               resb    1   ; seconds
    21                                  
    22                                  section .text
    23                                  _main:
    24 00000000 55                          push    rbp                     ; save stack
    25                                  
    26 00000001 48BF-                       mov     rdi, qword input_format
    26 00000003 [0000000000000000] 
    27 0000000B 48BE-                       mov     rsi, qword t
    27 0000000D [0000000000000000] 
    28 00000015 E8(00000000)                call    _scanf
    29                                  
    30                                      
    31 0000001A 668B05(00000000)            mov     ax, [t]
    32 00000021 4831D2                      xor     rdx, rdx
    33 00000024 66BB100E                    mov     bx, 3600
    34 00000028 66F7F3                      div     bx
    35 0000002B 8805(02000000)              mov     [h], al
    36 00000031 8815(03000000)              mov     [m], dl
    37                                  
    38 00000037 668B05(00000000)            mov     ax, [t]
    39 0000003E B33C                        mov     bl, 60
    40 00000040 F6F3                        div     bl
    41 00000042 8805(04000000)              mov     [s], al
    42                                  
    43 00000048 48BF-                       mov             rdi, output_format
    43 0000004A [0300000000000000] 
    44 00000052 4831F6                      xor             rsi, rsi
    45 00000055 660FBE35(02000000)          movsx           si, [h]
    46 0000005D 4831D2                      xor             rdx, rdx
    47 00000060 660FBE15(03000000)          movsx           dx, [m]
    48 00000068 4831C9                      xor             rcx, rcx
    49 0000006B 660FBE0D(04000000)          movsx           cx, [s]
    50 00000073 B800000000                  mov             rax, 0          ; no floating point
    51 00000078 E8(00000000)                call            _printf
    52                                    
    53 0000007D 5D                          pop	rbp                         ; restore stack
    54                                      
    55 0000007E B801000002                  mov       rax, 0x2000000 + 0x1  ; 1 = exit
    56 00000083 BF00000000                  mov       rdi, 0                ; 0 = success exit code
    57 00000088 0F05                        syscall                         ; quit
